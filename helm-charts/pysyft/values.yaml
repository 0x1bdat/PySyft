# Default values for pysyft.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will enable or disable postgresql and rabbitmq charts
tags:
  db: true
  queue: true

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
## @param global.postgresql.enabled global.postgresql.enabled
## @param global.rabbitmq.enabled global.rabbitmq.enabled
##
global:
  imageRegistry: "docker.io"
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []
  storageClass: ""
  postgresql:
    enabled: ""
  rabbitmq:
    enabled: ""

# Postgresql database
# Rererence link: https://artifacthub.io/packages/helm/bitnami/postgresql
postgresql:
  postgresqlUsername: "postgres"
  postgresqlPassword: ""
  postgresqlDatabase: ""
  persistence:
    enabled: true
    existingClaim: ""
    storageClass: "standard"
    accessModes:
      - "ReadWriteOnce"
    size: 8Gi
    # annotations:
    #   helm.sh/resource-policy: "keep"
  resources:
    requests:
      memory: 256Mi
      cpu: 250m

# RabbitMQ message broker
# Reference link: https://artifacthub.io/packages/helm/bitnami/rabbitmq
rabbitmq:
  auth:
    username: "user"
    password: ""
    erlangCookie: "secretcookie"
  resources:
    limits:
      memory: 512Mi
      cpu: 500m
    requests:
      memory: 256Mi
      cpu: 250m
  serviceAccount:
    create: true
  rbac:
    create: true
  persistence:
    enabled: true
    existingClaim: ""
    storageClass: "standard"
    accessModes: "ReadWriteOnce"
    size: 8Gi
    # annotations:
    #   helm.sh/resource-policy: "keep"

frontend:
  image:
    repository: openmined/grid-frontend
    tag: "latest"
    pullPolicy: IfNotPresent

  persistence:
    enabled: false
    storageClass: "standard"
  resources:
    limits:
      memory: 512Mi
      cpu: 500m
    requests:
      memory: 256Mi
      cpu: 250m
  
backend: 
  image:
    repository: openmined/grid-backend
    tag: "latest"
  resources:
    limits:
      memory: 512Mi
      cpu: 500m
    requests:
      memory: 256Mi
      cpu: 250m

celeryworker: 
  image:
    repository: openmined/grid-worker
    tag: "latest"
  resources:
    limits:
      memory: 512Mi
      cpu: 500m
    requests:
      memory: 256Mi
      cpu: 250m