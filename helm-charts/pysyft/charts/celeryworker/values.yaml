# Default values for celeryworker.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## @section Global parameters
## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, imagePullSecrets and storageClass

## @param global.imageRegistry Global Docker image registry
## @param global.imagePullSecrets Global Docker registry secret names as an array
## @param global.storageClass Global StorageClass for Persistent Volume(s)
##
global:
  imageRegistry: ""
  ## E.g.
  ## imagePullSecrets:
  ##   - myRegistryKeySecretName
  ##
  imagePullSecrets: []


image:
  registry: docker.io
  repository: openmined/grid-worker
  tag: "latest"
  ## Specify a imagePullPolicy
  ## Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## Example:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []

## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
## @param securityContext.enabled Enable security context
## @param securityContext.fsGroup Group ID for the pod
##
podSecurityContext: {}
  # fsGroup: 2000

## Container Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
## @param containerSecurityContext.enabled Enable container security context
## @param containerSecurityContext.runAsUser User ID for the container
##
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

## Pod Service Account
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
##
serviceAccount:
  ## @param serviceAccount.create Specifies whether a service account should be created
  ##
  create: false
  ## @param serviceAccount.annotations Annotations to add to the service account
  ##
  annotations: {}
  ## @param serviceAccount.name Name of an already existing service account.
  ## If not set and create is true, a name is generated using the fullname template
  ##
  name: ""

## Pod Replicas
## @param replicaCount Initial number of pods to spin up.
##
replicaCount: 1

## Horizontal Pod Autoscaler
## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
##
autoscaling:
  ## @param autoscaling.enabled Enable autoscaling of pods.
  ##
  enabled: false
  ## @param autoscaling.minReplicas Minimum number of replicas needed for a pod.
  ##
  minReplicas: 1
  ## @param autoscaling.maxReplicas Maximum number of replicas can a replicaset spin.
  ##
  maxReplicas: 10
  ## @param autoscaling.targetCPUUtilizationPercentage CPU limit on reaching which new pod will get triggered.
  ##
  targetCPUUtilizationPercentage: 80
  ## @param autoscaling.targetMemoryUtilizationPercentage Memory limit on reaching which new pod will get triggered.
  ##
  targetMemoryUtilizationPercentage: 80

## celeryworker service configuration
##
service:
  ## @param service.type Kubernetes Service type
  ##
  type: ClusterIP
  ## @param service.clusterIP Static clusterIP or None for headless services
  ## e.g:
  ## clusterIP: None
  ##
  clusterIP: ""
  ## @param service.port celeryworker port
  ##
  port: 80
  ## @param service.nodePort Specify the nodePort value for the LoadBalancer and NodePort service types
  ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
  ##
  nodePort: ""


## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
## @param resources.requests [object] The requested resources for the container
## @param resources.limits [object] The limits resources for the container
##
resources: {}
  ## We usually recommend not to specify default resources and to leave this as a conscious
  ## choice for the user. This also increases chances charts run on environments with little
  ## resources, such as Minikube. If you do want to specify resources, uncomment the following
  ## lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # requests:
  #   cpu: 100m
  #   memory: 128Mi
  # limits:
  #   cpu: 250m
  #   memory: 512Mi

## Configure the ingress resource that allows you to access the
## Nginx installation. Set up the URL
## ref: http://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  ## @param ingress.enabled Set to true to enable ingress record generation
  ##
  enabled: false
  className: ""
  ## @param ingress.annotations Ingress annotations
  ## For a full list of possible ingress annotations, please see
  ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
  ##
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  ## @param ingress.hosts List of ingress hosts and its paths
  ##
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  ## @param ingress.tls List of ingress hosts and secret names
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

nodeSelector: {}

tolerations: []

affinity: {}

# Environment Variables
env:
  VERSION: ""
  VERSION_HASH: ""
  SERVER_NAME: ""
  SERVER_HOST: ""
  SMTP_HOST: ""
  DOMAIN: ""