version: "3.8"
services:
  # To configure Traefik for self-signed TLS
  #  - use volume with the TLS configuration and user-provided self-signed certificates
  #  - configure entrypoints for HTTPS and HTTP
  #  - redirect all HTTP to HTTPS permanently
  proxy:
    volumes:
      - ./traefik:/etc/traefik
    command:
      - --providers.file.directory=/etc/traefik/dynamic-configurations
      - --providers.file.watch=true
      - --entryPoints.websecure.address=:443
      - --entryPoints.websecure.http.tls=true
      - --entryPoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      # The arguments below are the same as in docker-compose.override.yml
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker
      # Add a constraint to only use services with the label for this stack
      # from the env var TRAEFIK_TAG
      - --providers.docker.constraints=Label(`traefik.constraint-label-stack`, `${TRAEFIK_TAG?Variable not set}`)
      # Do not expose all Docker services, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false
      # Disable Docker Swarm mode for local development
      # - --providers.docker.swarmmode
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable the Dashboard and API
      - --api
      # Enable the Dashboard and API in insecure mode for local development
      - --api.insecure=true
      - --api.dashboard=true

  backend:
    labels:
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.entrypoints=websecure

  backend_stream:
    labels:
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-stream-http.entrypoints=websecure

  frontend:
    labels:
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-http.entrypoints=websecure

  tailscale:
    ports:
      - "${SECURE_DOMAIN_PORT?443}:443"