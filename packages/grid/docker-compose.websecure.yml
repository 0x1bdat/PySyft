---
# This file can be used to extend the docker-compose.override.yml Compose file.
# It adds a websecure entrypoint in the network proxy for HTTPS and TLS certificates.
version: "3.8"
services:
  # Add a port for HTTPS on the tailscale service
  tailscale:
    ports:
      - "${SECURE_DOMAIN_PORT?443}:443"
  # Configure Traefik for HTTPS and self-signed TLS
  #  - use volume with the TLS configuration and user-provided self-signed certificates
  #  - configure entrypoints for HTTPS and HTTP
  #  - redirect all HTTP to HTTPS permanently
  proxy:
    volumes:
      - ./traefik:/etc/traefik
    # note: this is the whole command, it does not merge arguments from multiple Compose files
    command:
      - --providers.file.directory=/etc/traefik/dynamic-configurations
      - --providers.file.watch=true
      # Entrypoint websecure is for HTTPS
      - --entryPoints.websecure.address=:443
      - --entryPoints.websecure.http.tls=true
      # Redirect all web to websecure (HTTP to HTTPS)
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true

      # The arguments below are the same as in docker-compose.override.yml

      # Enable the Dashboard and API in insecure mode for local development
      - --api.insecure=true
      - --api.dashboard=true

      # The arguments below are from docker-compose.yml, with the following exclusions:
      # --providers.docker.swarmmode - docker swarm mode is not enabled

      # Entrypoint web is for HTTP
      - --entryPoints.web.address=:80
      # Enable Docker in Traefik, so that it reads labels from Docker services
      - --providers.docker
      # Add a constraint to only use services with the label for this stack
      # from the env var TRAEFIK_TAG
      - --providers.docker.constraints=Label(`traefik.constraint-label-stack`, `${TRAEFIK_TAG?Variable not set}`)
      # Do not expose all Docker services, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable the Dashboard and API
      - --api
    labels:
      # Redirect all www to non-www on websecure (HTTPS)
      - "traefik.http.routers.wwwsecure-catchall.entrypoints=websecure"
      - "traefik.http.routers.wwwsecure-catchall.rule=HostRegexp(`{host:(www\\.).+}`)"
      - "traefik.http.routers.wwwsecure-catchall.tls=true"
      - "traefik.http.routers.wwwsecure-catchall.middlewares=wwwtohttps"
      - "traefik.http.middlewares.wwwtohttps.redirectregex.regex=^https?://(?:www\\.)?(.+)"
      - "traefik.http.middlewares.wwwtohttps.redirectregex.replacement=https://$${1}"
      - "traefik.http.middlewares.wwwtohttps.redirectregex.permanent=false"

  # Override Traefik entrypoints in routers for all services.
  # Compose labels are merged based on the label key, so websecure becomes the only entrypoint.

  backend:
    labels:
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-http.entrypoints=websecure

  backend_stream:
    labels:
      - traefik.http.routers.${STACK_NAME?Variable not set}-backend-stream-http.entrypoints=websecure

  frontend:
    labels:
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-http.entrypoints=websecure

  headscale:
    labels:
      - traefik.http.routers.${STACK_NAME?Variable not set}-vpn-http.entrypoint=websecure
